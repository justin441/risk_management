# Generated by Django 2.0.6 on 2018-07-25 10:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0016_auto_20180630_1508'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ('first_name', 'last_name')},
        ),
        migrations.AddField(
            model_name='businessunit',
            name='bu_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bu_manages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='businessunit',
            name='telephone',
            field=models.CharField(default='(+237) 000000000', help_text="L'indicatif est optionnel. exemple: (+237) 694484246", max_length=18, validators=[django.core.validators.RegexValidator(message='le format du numéro de téléphone est:[(+000)[ ]]999999999;les parties entre crochet sont optionnelles. exemple: (+237) 674228621, 674228621, (+234)674228621', regex='^(\\(\\+\\d{0,3}\\))? ?\\d{9}$')], verbose_name='Numero de Téléphone'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(max_length=30, verbose_name='prénom'),
        ),
        migrations.AlterField(
            model_name='user',
            name='fonction',
            field=models.CharField(max_length=100, verbose_name='fonction'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(max_length=150, verbose_name='nom'),
        ),
        migrations.AlterField(
            model_name='user',
            name='telephone',
            field=models.CharField(help_text="numero de téléphone à 9 chiffres, l'indicatif est optionnel", max_length=18, validators=[django.core.validators.RegexValidator(message='le format du numéro de téléphone est:[(+000)[ ]]999999999;les parties entre crochet sont optionnelles. exemple: (+237) 674228621, 674228621, (+234)674228621', regex='^(\\(\\+\\d{0,3}\\))? ?\\d{9}$')]),
        ),
    ]
